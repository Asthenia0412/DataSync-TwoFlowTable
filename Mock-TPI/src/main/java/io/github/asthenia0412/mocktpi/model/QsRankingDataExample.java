package io.github.asthenia0412.mocktpi.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class QsRankingDataExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table qs_ranking_data
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table qs_ranking_data
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table qs_ranking_data
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table qs_ranking_data
     *
     * @mbg.generated
     */
    public QsRankingDataExample() {
        oredCriteria = new ArrayList<>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table qs_ranking_data
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table qs_ranking_data
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table qs_ranking_data
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table qs_ranking_data
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table qs_ranking_data
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table qs_ranking_data
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table qs_ranking_data
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table qs_ranking_data
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table qs_ranking_data
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table qs_ranking_data
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * TPI学校排名表
     * 
     * @作者 Administrator
     * @日期 2025-08-17 16:54:10
     * @表名 qs_ranking_data
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andUniversityNameIsNull() {
            addCriterion("university_name is null");
            return (Criteria) this;
        }

        public Criteria andUniversityNameIsNotNull() {
            addCriterion("university_name is not null");
            return (Criteria) this;
        }

        public Criteria andUniversityNameEqualTo(String value) {
            addCriterion("university_name =", value, "universityName");
            return (Criteria) this;
        }

        public Criteria andUniversityNameNotEqualTo(String value) {
            addCriterion("university_name <>", value, "universityName");
            return (Criteria) this;
        }

        public Criteria andUniversityNameGreaterThan(String value) {
            addCriterion("university_name >", value, "universityName");
            return (Criteria) this;
        }

        public Criteria andUniversityNameGreaterThanOrEqualTo(String value) {
            addCriterion("university_name >=", value, "universityName");
            return (Criteria) this;
        }

        public Criteria andUniversityNameLessThan(String value) {
            addCriterion("university_name <", value, "universityName");
            return (Criteria) this;
        }

        public Criteria andUniversityNameLessThanOrEqualTo(String value) {
            addCriterion("university_name <=", value, "universityName");
            return (Criteria) this;
        }

        public Criteria andUniversityNameLike(String value) {
            addCriterion("university_name like", value, "universityName");
            return (Criteria) this;
        }

        public Criteria andUniversityNameNotLike(String value) {
            addCriterion("university_name not like", value, "universityName");
            return (Criteria) this;
        }

        public Criteria andUniversityNameIn(List<String> values) {
            addCriterion("university_name in", values, "universityName");
            return (Criteria) this;
        }

        public Criteria andUniversityNameNotIn(List<String> values) {
            addCriterion("university_name not in", values, "universityName");
            return (Criteria) this;
        }

        public Criteria andUniversityNameBetween(String value1, String value2) {
            addCriterion("university_name between", value1, value2, "universityName");
            return (Criteria) this;
        }

        public Criteria andUniversityNameNotBetween(String value1, String value2) {
            addCriterion("university_name not between", value1, value2, "universityName");
            return (Criteria) this;
        }

        public Criteria andQsRankIsNull() {
            addCriterion("qs_rank is null");
            return (Criteria) this;
        }

        public Criteria andQsRankIsNotNull() {
            addCriterion("qs_rank is not null");
            return (Criteria) this;
        }

        public Criteria andQsRankEqualTo(Integer value) {
            addCriterion("qs_rank =", value, "qsRank");
            return (Criteria) this;
        }

        public Criteria andQsRankNotEqualTo(Integer value) {
            addCriterion("qs_rank <>", value, "qsRank");
            return (Criteria) this;
        }

        public Criteria andQsRankGreaterThan(Integer value) {
            addCriterion("qs_rank >", value, "qsRank");
            return (Criteria) this;
        }

        public Criteria andQsRankGreaterThanOrEqualTo(Integer value) {
            addCriterion("qs_rank >=", value, "qsRank");
            return (Criteria) this;
        }

        public Criteria andQsRankLessThan(Integer value) {
            addCriterion("qs_rank <", value, "qsRank");
            return (Criteria) this;
        }

        public Criteria andQsRankLessThanOrEqualTo(Integer value) {
            addCriterion("qs_rank <=", value, "qsRank");
            return (Criteria) this;
        }

        public Criteria andQsRankIn(List<Integer> values) {
            addCriterion("qs_rank in", values, "qsRank");
            return (Criteria) this;
        }

        public Criteria andQsRankNotIn(List<Integer> values) {
            addCriterion("qs_rank not in", values, "qsRank");
            return (Criteria) this;
        }

        public Criteria andQsRankBetween(Integer value1, Integer value2) {
            addCriterion("qs_rank between", value1, value2, "qsRank");
            return (Criteria) this;
        }

        public Criteria andQsRankNotBetween(Integer value1, Integer value2) {
            addCriterion("qs_rank not between", value1, value2, "qsRank");
            return (Criteria) this;
        }

        public Criteria andTheRankIsNull() {
            addCriterion("the_rank is null");
            return (Criteria) this;
        }

        public Criteria andTheRankIsNotNull() {
            addCriterion("the_rank is not null");
            return (Criteria) this;
        }

        public Criteria andTheRankEqualTo(Integer value) {
            addCriterion("the_rank =", value, "theRank");
            return (Criteria) this;
        }

        public Criteria andTheRankNotEqualTo(Integer value) {
            addCriterion("the_rank <>", value, "theRank");
            return (Criteria) this;
        }

        public Criteria andTheRankGreaterThan(Integer value) {
            addCriterion("the_rank >", value, "theRank");
            return (Criteria) this;
        }

        public Criteria andTheRankGreaterThanOrEqualTo(Integer value) {
            addCriterion("the_rank >=", value, "theRank");
            return (Criteria) this;
        }

        public Criteria andTheRankLessThan(Integer value) {
            addCriterion("the_rank <", value, "theRank");
            return (Criteria) this;
        }

        public Criteria andTheRankLessThanOrEqualTo(Integer value) {
            addCriterion("the_rank <=", value, "theRank");
            return (Criteria) this;
        }

        public Criteria andTheRankIn(List<Integer> values) {
            addCriterion("the_rank in", values, "theRank");
            return (Criteria) this;
        }

        public Criteria andTheRankNotIn(List<Integer> values) {
            addCriterion("the_rank not in", values, "theRank");
            return (Criteria) this;
        }

        public Criteria andTheRankBetween(Integer value1, Integer value2) {
            addCriterion("the_rank between", value1, value2, "theRank");
            return (Criteria) this;
        }

        public Criteria andTheRankNotBetween(Integer value1, Integer value2) {
            addCriterion("the_rank not between", value1, value2, "theRank");
            return (Criteria) this;
        }

        public Criteria andYearIsNull() {
            addCriterion("year is null");
            return (Criteria) this;
        }

        public Criteria andYearIsNotNull() {
            addCriterion("year is not null");
            return (Criteria) this;
        }

        public Criteria andYearEqualTo(Integer value) {
            addCriterion("year =", value, "year");
            return (Criteria) this;
        }

        public Criteria andYearNotEqualTo(Integer value) {
            addCriterion("year <>", value, "year");
            return (Criteria) this;
        }

        public Criteria andYearGreaterThan(Integer value) {
            addCriterion("year >", value, "year");
            return (Criteria) this;
        }

        public Criteria andYearGreaterThanOrEqualTo(Integer value) {
            addCriterion("year >=", value, "year");
            return (Criteria) this;
        }

        public Criteria andYearLessThan(Integer value) {
            addCriterion("year <", value, "year");
            return (Criteria) this;
        }

        public Criteria andYearLessThanOrEqualTo(Integer value) {
            addCriterion("year <=", value, "year");
            return (Criteria) this;
        }

        public Criteria andYearIn(List<Integer> values) {
            addCriterion("year in", values, "year");
            return (Criteria) this;
        }

        public Criteria andYearNotIn(List<Integer> values) {
            addCriterion("year not in", values, "year");
            return (Criteria) this;
        }

        public Criteria andYearBetween(Integer value1, Integer value2) {
            addCriterion("year between", value1, value2, "year");
            return (Criteria) this;
        }

        public Criteria andYearNotBetween(Integer value1, Integer value2) {
            addCriterion("year not between", value1, value2, "year");
            return (Criteria) this;
        }

        public Criteria andCreatedAtIsNull() {
            addCriterion("created_at is null");
            return (Criteria) this;
        }

        public Criteria andCreatedAtIsNotNull() {
            addCriterion("created_at is not null");
            return (Criteria) this;
        }

        public Criteria andCreatedAtEqualTo(Date value) {
            addCriterion("created_at =", value, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtNotEqualTo(Date value) {
            addCriterion("created_at <>", value, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtGreaterThan(Date value) {
            addCriterion("created_at >", value, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtGreaterThanOrEqualTo(Date value) {
            addCriterion("created_at >=", value, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtLessThan(Date value) {
            addCriterion("created_at <", value, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtLessThanOrEqualTo(Date value) {
            addCriterion("created_at <=", value, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtIn(List<Date> values) {
            addCriterion("created_at in", values, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtNotIn(List<Date> values) {
            addCriterion("created_at not in", values, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtBetween(Date value1, Date value2) {
            addCriterion("created_at between", value1, value2, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtNotBetween(Date value1, Date value2) {
            addCriterion("created_at not between", value1, value2, "createdAt");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table qs_ranking_data
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {
        protected Criteria() {
            super();
        }
    }

    /**
     * TPI学校排名表
     * 
     * @作者 Administrator
     * @日期 2025-08-17 16:54:10
     * @表名 qs_ranking_data
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}